{"version":3,"sources":["C:/Users/Pupix/AppData/Roaming/npm/node_modules/browserify/node_modules/browser-pack/_prelude.js","index","lib/index.js","C:/Users/Pupix/AppData/Roaming/npm/node_modules/browserify/node_modules/buffer/index.js","C:/Users/Pupix/AppData/Roaming/npm/node_modules/browserify/node_modules/ieee754/index.js","C:/Users/Pupix/AppData/Roaming/npm/node_modules/browserify/node_modules/base64-js/lib/b64.js","C:/Users/Pupix/AppData/Roaming/npm/node_modules/browserify/node_modules/is-array/index.js"],"names":["global","isBuffer","item","Buffer","isArrayBuffer","ArrayBuffer","isAnsi","XP","require","stepMap","Int8","size","needsEndian","UInt8","Int16","UInt16","Int32","UInt32","Float","Double","module","exports","Class","initialize","buffer","assertArgument","this","_buffer","addShorthandMethods_","value","configurable","enumerable","_endian","_offset","endianess","isString","lowerCase","length","stringView","map","byte","String","fromCharCode","hexView","pre","upperCase","toString","ansiView","tell","seek","offset","isNumber","isWithin","skip","int8","isVoid","isPositive","_read","_length","uint8","int16","uint16","int32","uint32","float","double","string","string0","start","final","bit8","_mapBitField","bit16","bit32","self","ubyte","ushort","uint","opt","i","result","method","push","writable","flags","window","typedArraySupport","Bar","arr","Uint8Array","foo","constructor","subarray","byteLength","e","kMaxLength","TYPED_ARRAY_SUPPORT","arg","parent","undefined","fromNumber","fromString","arguments","fromObject","that","allocate","checked","encoding","write","object","fromBuffer","isArray","fromArray","TypeError","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","array","_augment","type","data","__proto__","prototype","_isBuffer","fromPool","poolSize","rootParent","RangeError","SlowBuffer","subject","buf","len","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","Infinity","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","Number","remaining","strLen","Error","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","slice","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","n","units","leadSurrogate","charCodeAt","byteArray","c","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","b","compare","a","x","y","isEncoding","concat","list","pos","equals","inspect","match","join","indexOf","val","byteOffset","arrayIndexOf","foundIndex","call","get","console","log","readUInt8","set","v","writeUInt8","isFinite","swap","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","targetStart","_set","fill","toArrayBuffer","BP","toLocaleString","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","LN2","lookup","decode","elt","code","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","l","tmp","placeHolders","charAt","Arr","uint8ToBase64","encode","num","tripletToBase64","temp","extraBytes","output","base64js","Object"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","!function(){\"use strict\";module.exports=require(\"./lib/index\")}();","/*jslint bitwise: true, browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var XP = global.XP || require('expandjs'),\r\n        stepMap = {\r\n            Int8: {\r\n                size: 1,\r\n                needsEndian: false\r\n            },\r\n            UInt8: {\r\n                size: 1,\r\n                needsEndian: false\r\n            },\r\n            Int16: {\r\n                size: 2,\r\n                needsEndian: true\r\n            },\r\n            UInt16: {\r\n                size: 2,\r\n                needsEndian: true\r\n            },\r\n            Int32: {\r\n                size: 4,\r\n                needsEndian: true\r\n            },\r\n            UInt32: {\r\n                size: 4,\r\n                needsEndian: true\r\n            },\r\n            Float: {\r\n                size: 4,\r\n                needsEndian: true\r\n            },\r\n            Double: {\r\n                size: 8,\r\n                needsEndian: true\r\n            }\r\n        };\r\n\r\n    /*********************************************************************/\r\n\r\n    //Util\r\n    function isBuffer(item) {\r\n        return item instanceof Buffer;\r\n    }\r\n\r\n    function isArrayBuffer(item) {\r\n        return item instanceof ArrayBuffer;\r\n    }\r\n\r\n    function isAnsi(item) {\r\n        return !(item < 32\r\n        || item === 127\r\n        || item === 129\r\n        || item === 141\r\n        || item === 143\r\n        || item === 144\r\n        || item === 157\r\n        || item > 255);\r\n    }\r\n\r\n    /*********************************************************************/\r\n\r\n    module.exports = new XP.Class('Parser', {\r\n\r\n        initialize: function (buffer) {\r\n\r\n            XP.assertArgument(isBuffer(buffer) || isArrayBuffer(buffer), 1, 'Buffer or ArrayBuffer');\r\n\r\n            this._buffer = isBuffer(buffer) ? buffer : new Buffer(buffer);\r\n            this.addShorthandMethods_();\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        _buffer: {\r\n            value: null,\r\n            configurable : false,\r\n            enumerable: false\r\n        },\r\n\r\n        _endian: {\r\n            value: 'LE',\r\n            configurable : false,\r\n            enumerable: false\r\n        },\r\n\r\n        _offset: {\r\n            value: 0,\r\n            configurable : false,\r\n            enumerable: false\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        endianess: function (value) {\r\n\r\n            XP.assertArgument(XP.isString(value), 1, 'String');\r\n\r\n            value = XP.lowerCase(value);\r\n\r\n            if (value === 'little' || value === 'le') {\r\n                this._endian = 'LE';\r\n            }\r\n            if (value === 'big' || value === 'be') {\r\n                this._endian = 'BE';\r\n            }\r\n\r\n            return this._endian;\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        size: function () {\r\n            return this._buffer.length;\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        stringView: function () {\r\n            return XP.map(this._buffer, function (byte) {\r\n                return String.fromCharCode(byte);\r\n            });\r\n        },\r\n\r\n        hexView: function () {\r\n            var pre = '';\r\n            return XP.map(this._buffer, function (byte) {\r\n                pre = (byte < 16) ? '0' : '';\r\n                return XP.upperCase(pre + byte.toString(16));\r\n            });\r\n        },\r\n\r\n        ansiView: function () {\r\n            return XP.map(this._buffer, function (byte) {\r\n                return isAnsi(byte) ? String.fromCharCode(byte) : '.';\r\n            });\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        tell: function () {\r\n            return this._offset;\r\n        },\r\n\r\n        seek: function (offset) {\r\n\r\n            XP.assertArgument(XP.isNumber(offset), 1, 'Number');\r\n            XP.assertArgument(XP.isWithin(offset, 0, this.size()), 1, 'Out of bound');\r\n\r\n            this._offset = offset;\r\n            return this._offset;\r\n        },\r\n\r\n        skip: function (offset) {\r\n            return this.seek(this.tell() + offset);\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        int8: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'Int8', _length: length});\r\n        },\r\n\r\n        uint8: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'UInt8', _length: length});\r\n        },\r\n\r\n        int16: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'Int16', _length: length});\r\n        },\r\n\r\n        uint16: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'UInt16', _length: length});\r\n        },\r\n\r\n        int32: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'Int32', _length: length});\r\n        },\r\n\r\n        uint32: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'UInt32', _length: length});\r\n        },\r\n\r\n        float: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'Float', _length: length});\r\n        },\r\n\r\n        double: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._read({_read: 'Double', _length: length});\r\n        },\r\n\r\n        string: function (length) {\r\n            XP.assertArgument(XP.isPositive(length), 1, 'Positive number');\r\n            this.skip(length);\r\n            return this._buffer.toString('utf8', this._offset - length, this._offset);\r\n        },\r\n\r\n        string0: function () {\r\n            var start = this.tell(),\r\n                final = start;\r\n\r\n            while (this.byte() !== 0) {\r\n                final += 1;\r\n            }\r\n\r\n            return this._buffer.toString('utf8', start, final);\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        bit8: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._mapBitField(this.uint8(length), 8);\r\n        },\r\n\r\n        bit16: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._mapBitField(this.uint16(length), 16);\r\n        },\r\n\r\n        bit32: function (length) {\r\n            XP.assertArgument(XP.isVoid(length) || XP.isPositive(length), 1, 'Positive number');\r\n            return this._mapBitField(this.uint32(length), 32);\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        addShorthandMethods_: function () {\r\n            var self = this;\r\n\r\n            self.byte = self.int8;\r\n            self.ubyte = self.uint8;\r\n            self.short = self.int16;\r\n            self.ushort = self.uint16;\r\n            self.int = self.int32;\r\n            self.uint = self.uint32;\r\n            self.long = self.double;\r\n        },\r\n\r\n        /**************************************************************/\r\n\r\n        _read: {\r\n            value: function (opt) {\r\n                var i,\r\n                    result = [],\r\n                    method = opt._read + (stepMap[opt._read].needsEndian ? this._endian : ''),\r\n                    length = opt._length || 1;\r\n\r\n                for (i = 0; i < length; i += 1) {\r\n                    result.push(this._buffer['read' + method](this._offset));\r\n                    this.skip(stepMap[opt._read].size);\r\n                }\r\n\r\n                return length === 1 ? result[0] : result;\r\n            },\r\n            configurable : false,\r\n            enumerable: false,\r\n            writable: false\r\n        },\r\n\r\n        _mapBitField: function (value, length) {\r\n            var flags = [],\r\n                i;\r\n\r\n            for (i = 0; i < length; i += 1) {\r\n                flags.push((value & (1 << i)) !== 0);\r\n            }\r\n\r\n            return flags;\r\n        }\r\n\r\n    });\r\n\r\n}(typeof window !== \"undefined\" ? window : global));\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  this.length = 0\n  this.parent = undefined\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n"]}